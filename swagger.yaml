swagger: '2.0'
info:
  description: MiddleLayer to be used by SafetyPay Direct v.2.0
  version: 1.0.0
  title: SafetyPay Direct MiddleLayer v.2.0
  contact:
    name: API Team
    url: 'http://support.safetypay.com'
    email: support@safetypay.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'api.services.safetypay.com:443'
basePath: /direct/2.0/
tags:
  - name: UserSection
    description: Operations related to authentication
  - name: CustomerSection
    description: Operations about Customer
  - name: CommonSection
schemes:
  - https
paths:
  /customers:
    get:
      tags:
        - CustomerSection
      summary: Get Customers List
      description: Get Customers List
      operationId: getCustomers
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - CustomerSection
      summary: Add a new Customer
      description: Add a new Customer
      operationId: addCustomer
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Customer'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
  '/customers/{id}':
    get:
      tags:
        - CustomerSection
      summary: Get a Customer By ID
      description: Get a Customer By ID
      operationId: getCustomersId
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Customer'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - CustomerSection
      summary: Update Customer
      description: Update Customer
      operationId: putCustomersId
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Customer'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - CustomerSection
      summary: Delete a Customer
      description: Delete a Customer
      operationId: deleteCustomersId
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
  /users:
    get:
      tags:
        - UserSection
      summary: Get Users List
      description: Get Users List
      operationId: getUsers
      consumes: []
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - UserSection
      summary: Add a new user
      description: Add a new user
      operationId: addUser
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
  '/users/by_type/{type}':
    get:
      tags:
        - UserSection
      summary: Get List of User List By Type
      description: Get List of User List By Type
      operationId: findPetsByTags
      consumes: []
      produces:
        - application/json
      parameters:
        - name: type
          in: path
          description: Customer Type
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
  /users/login:
    post:
      tags:
        - UserSection
      summary: User Login Call
      description: User Login Call
      operationId: postUsersLogin
      consumes: []
      produces:
        - application/json
      parameters:
        - name: username
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: password
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/LoginCredentials'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
  '/users/{id}':
    get:
      tags:
        - UserSection
      summary: Get User by ID
      description: Get User by ID
      operationId: getPetById
      consumes: []
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - UserSection
      summary: Update User
      description: Update User
      operationId: putUsersId
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
        - in: body
          name: body
          required: false
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - UserSection
      summary: Deletes a user
      description: Deletes a user
      operationId: deleteUser
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '401':
          description: Not Authorized
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '402':
          description: Request Failed
          schema:
            type: array
            items:
              $ref: '#/definitions/Error'
        '405':
          description: Method not Allowed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error 500
          schema:
            $ref: '#/definitions/Error'
definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int32
      firstName:
        type: string
      userlogin:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
      phone:
        type: string
      userStatus:
        type: integer
        format: int32
        description: User Status
  Customer:
    type: object
    required:
      - email
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      lastname:
        type: string
      email:
        type: string
        description: ''
      phone:
        type: string
  Status:
    type: object
    properties:
      id:
        type: integer
        format: int32
      value:
        type: string
  LoginCredentials:
    type: object
    required:
      - password
      - username
    properties:
      username:
        type: string
        description: Username
      password:
        type: string
        description: Password
  Category:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
  Type:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
  Error:
    type: object
    properties:
      id:
        type: integer
        format: int32
      description:
        type: string